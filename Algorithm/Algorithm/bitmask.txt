- 20개의 비트가 전부 켜진 정수는 다음과 같다.

int data = (1 << 20) - 1

1을 왼쪽으로 20비트 시프트한 후 1을 빼면 20자리가 전부 1인 정수가 된다.


- p번째 있는 정수를 켜는 연산은 다음과 같다.

data |= (1 << p);

1을 p비트 시프트한 정수를 data와 OR 연산하면 data의 p비트 위치 정수가 1이 된다.
이미 1일경우 값이 변하지 않는다.


- p번째 있는 정수를 끄는 연산은 다음과 같다.

data &= ~(1 << p)

먼저 p번째 원소만 0으로 유지하고, 나머지 원소를 1로 만든 수를 data와 AND 연산하면
data의 p비트 위치 원소는 항상 0이 되고, 나머지 원소는 원래 수가 유지된다.

data -= (1 << p)

위와 같은 연산은 p비트 위치 원소가 이미 0일 경우 위험하다.


- 켜져 있는 원소는 끄고, 꺼져 있는 원소는 켜는 연산은 다음과 같다.

data ^= (1 << p)
